-- (RDN) De un usuario solo se pueden actualizar el correo y el telefono
-- (RDN) De un usuario solo se pueden eliminar el correo y el telefono

CREATE OR REPLACE PACKAGE PKG_USUARIOS AS
    PROCEDURE REGISTRAR_USUARIO(
        P_DOCUMENTO       IN NUMBER,
        P_TIPODOCUMENTO   IN VARCHAR2,
        P_CORREO          IN VARCHAR2,
        P_TELEFONO        IN VARCHAR2,
        P_FECHANACIMIENTO IN DATE,
        P_NOMBRE          IN VARCHAR2,
        P_APELLIDO        IN VARCHAR2,
        P_GENERO          IN VARCHAR2,
        P_EDAD            IN NUMBER
    );
    PROCEDURE MODIFICAR_USUARIO(
        P_DOCUMENTO       IN NUMBER,
        P_CORREO          IN VARCHAR2,
        P_TELEFONO        IN VARCHAR2
    );
    PROCEDURE ELIMINAR_USUARIO(P_DOCUMENTO IN NUMBER);
    FUNCTION CONSULTAR_USUARIO(P_DOCUMENTO IN NUMBER) RETURN SYS_REFCURSOR;

    PROCEDURE CREAR_CONTROL(
        P_USUARIO  IN NUMBER,
        P_FECHA    IN DATE,
        P_PESO     IN NUMBER,
        P_ALTURA   IN NUMBER,
        P_MBICEP   IN NUMBER,
        P_MTRICEP  IN NUMBER,
        P_MTORSO   IN NUMBER,
        P_MABDOMEN IN NUMBER,
        P_IMC      IN NUMBER
    );
    FUNCTION CONSULTAR_CONTROLES(P_USUARIO IN NUMBER) RETURN SYS_REFCURSOR;

    PROCEDURE CREAR_MEMBRESIA(
        P_USUARIO    IN NUMBER,
        P_TIPO       IN VARCHAR2,
        P_FACTURA    IN NUMBER,
        P_ESTATUS    IN VARCHAR2,
        P_METODOPAGO IN VARCHAR2,
        P_FECHAINI   IN DATE,
        P_FECHAFIN   IN DATE
    );

    FUNCTION MEMBRESIA_ACTIVA(P_USUARIO IN NUMBER) RETURN BOOLEAN;
    FUNCTION ACCESO_ZONA(P_USUARIO IN NUMBER, P_SEDE IN NUMBER, P_ZONA IN VARCHAR2) RETURN BOOLEAN;
END PKG_USUARIOS;

CREATE OR REPLACE PACKAGE PKG_EMPLEADOS AS
    PROCEDURE REGISTRAR_EMPLEADO(
        P_DOCUMENTO       IN NUMBER,
        P_TIPODOCUMENTO   IN VARCHAR2,
        P_CORREO          IN VARCHAR2,
        P_TELEFONO        IN VARCHAR2,
        P_FECHANACIMIENTO IN DATE,
        P_NOMBRE          IN VARCHAR2,
        P_APELLIDO        IN VARCHAR2,
        P_GENERO          IN VARCHAR2,
        P_EDAD            IN NUMBER,
        P_SEDE            IN NUMBER,
        P_ESTATUS         IN VARCHAR2,
        P_CARGO           IN VARCHAR2
    );
    PROCEDURE MODIFICAR_EMPLEADO(
        P_DOCUMENTO       IN NUMBER,
        P_CORREO          IN VARCHAR2,
        P_TELEFONO        IN VARCHAR2,
        P_SEDE            IN NUMBER,
        P_ESTATUS         IN VARCHAR2,
        P_CARGO           IN VARCHAR2
    );
    FUNCTION CONSULTAR_EMPLEADO(P_DOCUMENTO IN NUMBER) RETURN SYS_REFCURSOR;
    PROCEDURE ELIMINAR_EMPLEADO(P_DOCUMENTO IN NUMBER);
    FUNCTION CONSULTAR_EMPLEADOS RETURN SYS_REFCURSOR;

    FUNCTION CONSULTAR_CONTRATO(P_ID IN NUMBER) RETURN SYS_REFCURSOR;

    PROCEDURE CREAR_CONTRATO(
        P_EMPLEADO     IN NUMBER,
        P_TIPOCONTRATO IN VARCHAR2,
        P_FECHAINICIO  IN DATE,
        P_FECHAFINAL   IN DATE,
        P_SUELDO       IN NUMBER,
        P_DESCRIPCION  IN VARCHAR2,
        P_ESTADO       IN VARCHAR2
    );

    FUNCTION CONSULTAR_SOLICITUD(P_ID IN NUMBER) RETURN SYS_REFCURSOR;
    FUNCTION CONSULTAR_SOLICITUDES_EMPLEADO(P_EMPLEADO IN NUMBER) RETURN SYS_REFCURSOR;

    PROCEDURE CREAR_SOLICITUD(
        P_CREADOR     IN NUMBER,
        P_IMPORTANCIA IN NUMBER,
        P_ASUNTO      IN VARCHAR2,
        P_DESCRIPCION IN VARCHAR2
    );

    FUNCTION CONSULTAR_EVENTO(P_ID IN NUMBER) RETURN SYS_REFCURSOR;
    FUNCTION CONSULTAR_EVENTOS RETURN SYS_REFCURSOR;
    FUNCTION CONSULTAR_EVENTOS_EMPLEADO(P_EMPLEADO IN NUMBER) RETURN SYS_REFCURSOR;
END PKG_EMPLEADOS;

CREATE OR REPLACE PACKAGE PKG_SEDES AS
    PROCEDURE CREAR_UBICACION(
        P_ID           IN NUMBER,
        P_PAIS         IN VARCHAR2,
        P_REGION       IN VARCHAR2,
        P_CIUDAD       IN VARCHAR2,
        P_DIRECCION    IN VARCHAR2,
        P_DETALLES     IN VARCHAR2,
        P_CODIGOPOSTAL IN VARCHAR2
    );

    PROCEDURE CREAR_SEDE(
        P_ID        IN NUMBER,
        P_NOMBRE    IN VARCHAR2,
        P_UBICACION IN NUMBER
    );
    PROCEDURE MODIFICAR_SEDE(
        P_ID        IN NUMBER,
        P_NOMBRE    IN VARCHAR2
    );
    PROCEDURE ELIMINAR_SEDE(P_ID IN NUMBER);
    FUNCTION CONSULTAR_SEDE(P_ID IN NUMBER) RETURN SYS_REFCURSOR;
    FUNCTION CONSULTAR_SEDES RETURN SYS_REFCURSOR;

    PROCEDURE CREAR_ZONA(
        P_NOMBRE      IN VARCHAR2,
        P_SEDE        IN NUMBER,
        P_DESCRIPCION IN VARCHAR2
    );
    PROCEDURE MODIFICAR_ZONA(
        P_NOMBRE      IN VARCHAR2,
        P_DESCRIPCION IN VARCHAR2
    );
    FUNCTION CONSULTAR_ZONAS(P_SEDE IN NUMBER) RETURN SYS_REFCURSOR;
    PROCEDURE ELIMINAR_ZONA(P_NOMBRE IN VARCHAR2, P_SEDE IN NUMBER);

    FUNCTION CREAR_REGISTRO_ELEMENTO(
        P_ID          IN NUMBER,
        P_SEDE        IN NUMBER,
        P_NOMBRE      IN VARCHAR2,
        P_PRECIO      IN NUMBER,
        P_FECHACOMPRA IN DATE,
        P_TIPO        IN VARCHAR2,
        P_DESCRIPCION IN VARCHAR2
    ) RETURN SYS_REFCURSOR;
    PROCEDURE CREAR_REGISTRO_MAQUINA(
        P_ID          IN NUMBER,
        P_SEDE        IN NUMBER,
        P_NOMBRE      IN VARCHAR2,
        P_PRECIO      IN NUMBER,
        P_FECHACOMPRA IN DATE,
        P_TIPO        IN VARCHAR2,
        P_DESCRIPCION IN VARCHAR2,
        P_ESTADO      IN VARCHAR2
    );
    PROCEDURE MODIFICAR_REGISTRO_ELEMENTO(
        P_ID          IN NUMBER,
        P_NOMBRE      IN VARCHAR2,
        P_DESCRIPCION IN VARCHAR2
    );
    PROCEDURE MODIFICAR_REGISTRO_MAQUINA(
        P_ID          IN NUMBER,
        P_NOMBRE      IN VARCHAR2,
        P_DESCRIPCION IN VARCHAR2,
        P_ESTADO      IN VARCHAR2
    );
END PKG_SEDES;

CREATE OR REPLACE PACKAGE PKG_EVENTOS AS
    PROCEDURE CREAR_EVENTO(
        P_LIDER       IN NUMBER,
        P_SEDE        IN NUMBER,
        P_NOMBRE      IN VARCHAR2,
        P_FECHAYHORA  IN DATE,
        P_DURACION    IN NUMBER,
        P_ESTADO      IN VARCHAR2,
        P_DESCRIPCION IN VARCHAR2
    );

    PROCEDURE MODIFICAR_EVENTO(
        P_ID          IN NUMBER,
        P_LIDER       IN NUMBER,
        P_SEDE        IN NUMBER,
        P_NOMBRE      IN VARCHAR2,
        P_FECHAYHORA  IN DATE,
        P_DURACION    IN NUMBER,
        P_ESTADO      IN VARCHAR2,
        P_DESCRIPCION IN VARCHAR2
        );
    PROCEDURE INSCRIBIR_EVENTO(P_USUARIO IN NUMBER, P_EVENTO IN NUMBER);
END PKG_EVENTOS;

CREATE OR REPLACE PACKAGE PKG_MEMBRESIA AS
    PROCEDURE CREAR_TIPO_MEMBRESIA(
        P_TIPO         IN VARCHAR2,
        P_PRECIO       IN NUMBER,
        P_DURACIONDIAS IN NUMBER,
        P_DESCRIPCION  IN VARCHAR2
    );
    FUNCTION CONSULTAR_TIPOS_MEMBRESIA RETURN SYS_REFCURSOR;

    PROCEDURE ASIGNAR_BENEFICIO_ZONA(
        P_TIPO_MEMBRESIA IN VARCHAR2,
        P_ZONA           IN VARCHAR2,
        P_SEDE           IN NUMBER,
        P_DESCRIPCION    IN VARCHAR2
    );
    FUNCTION CONSULTAR_BENEFICIO_ZONA(P_TIPO_MEMBRESIA IN VARCHAR2) RETURN SYS_REFCURSOR;

    FUNCTION CONSULTAR_FACTURA(P_MEMBRESIA_ID IN NUMBER) RETURN SYS_REFCURSOR;
END PKG_MEMBRESIA;

CREATE OR REPLACE PACKAGE PKG_ENTRADASALIDAS AS
    PROCEDURE REGISTRAR_ENTRADA(
        P_PERSONA IN NUMBER,
        P_ZONA    IN VARCHAR2,
        P_SEDE    IN NUMBER
    );
    PROCEDURE REGISTRAR_SALIDA(
        P_PERSONA IN NUMBER,
        P_ZONA    IN VARCHAR2,
        P_SEDE    IN NUMBER
    );
    FUNCTION CONSULTAR_ENTRADAS(P_PERSONA IN NUMBER) RETURN SYS_REFCURSOR;
    FUNCTION CONSULTAR_SALIDAS(P_PERSONA IN NUMBER) RETURN SYS_REFCURSOR;
END PKG_ENTRADASALIDAS;